name: Github Pages Azure DNS resources

on:
  workflow_dispatch:
  push:
    paths:
      - "azure/**"
      - ".github/workflows/azure.yml"

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: List cloud-docs.info azure resources
        run: az network dns record-set list --resource-group dns-rg --zone-name "cloud-docs.info"

      - name: List GitHub Repositories
        id: list_repos
        run: |
          $url = "https://api.github.com/user/repos"
          $headers = @{
            "Authorization" = "token $env:GITHUB_TOKEN"
            "Accept" = "application/vnd.github.v3+json"
          }
          try {
            $response = Invoke-RestMethod -Uri $url -Headers $headers
            $repoNames = $response | ForEach-Object { $_.name }
            Write-Output $repoNames
          } catch {
            Write-Host "Failed to list GitHub repositories: $_"
            exit 1
          }

      - name: Deploy Azure DNS resources
        id: deploy_dns
        run: |
          $githubRepositories = $env:GITHUB_REPOSITORIES
          $command = "az deployment group create --resource-group dns-rg --template-file azure-dns.bicep --parameters dnsZoneName='cloud-docs.info' --parameters repositoryNames=$githubRepositories"
          Write-Output $command
          Invoke-Expression $command
          Write-Output "::set-output name=domain_name::${{ github.event.repository.name }}.cloud-docs.info"

      - name: Enable GitHub Pages and set custom domain for each repository
        run: |
          $repos = $env:GITHUB_REPOSITORIES | ConvertFrom-Json
          foreach ($repo in $repos) {
            $url = "https://api.github.com/repos/${env:GITHUB_ACTOR}/$repo/pages"
            $body = @{
              source = @{ branch = "main"; path = "/" }
              cname = "$repo.cloud-docs.info"
              https_enforced = $true
            }
            $bodyJson = $body | ConvertTo-Json -Compress
            $headers = @{
              "Authorization" = "Bearer $env:GITHUB_TOKEN"
              "Accept" = "application/vnd.github.v3+json"
            }
            try {
              Invoke-RestMethod -Uri $url -Method Post -Body $bodyJson -Headers $headers
              Write-Host "Successfully enabled GitHub Pages for ${repo}."
            } catch {
              Write-Host "Attempt to enable GitHub Pages failed for ${repo}: $_"
            }
          }

      - name: Create CNAME file for custom domain
        run: |
          $repos = $env:GITHUB_REPOSITORIES | ConvertFrom-Json
          foreach ($repo in $repos) {
            $cnameContent = "$repo.cloud-docs.info"
            $cnameEncodedContent = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($cnameContent))
            $url = "https://api.github.com/repos/${env:GITHUB_ACTOR}/$repo/contents/CNAME"
            $body = @{
              message = "Create CNAME for GitHub Pages custom domain"
              content = $cnameEncodedContent
              branch = "main"
            }
            $bodyJson = $body | ConvertTo-Json -Compress
            $headers = @{
              "Authorization" = "Bearer $env:GITHUB_TOKEN"
              "Accept" = "application/vnd.github.v3+json"
            }
            try {
              Invoke-RestMethod -Uri $url -Method Put -Body $bodyJson -Headers $headers
              Write-Host "Successfully created CNAME file in ${repo}."
            } catch {
              Write-Host "Failed to create CNAME file in ${repo}: $_"
            }
          }

      - name: Deployed cloud-docs.info azure resources
        run: az network dns record-set list --resource-group dns-rg --zone-name "cloud-docs.info"
